{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\t_cse\\\\Documents\\\\FunDev\\\\mediumProject\\\\funChain\\\\requirements_tracker_react\\\\frontend\\\\src\\\\pages\\\\OrganisationsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Chip, IconButton } from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport api from '../utils/axios';\nimport PageHeader from '../components/PageHeader';\nimport styles from './styles/OrganisationsPage.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrganisationsPage = () => {\n  _s();\n  var _location$state;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const tenantId = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.tenantId) || 1;\n  const [organisations, setOrganisations] = useState([]);\n  const [tenantName, setTenantName] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch tenant details\n        const tenantResponse = await api.get(`/api/tenants/${tenantId}`);\n        setTenantName(tenantResponse.data.name);\n\n        // Fetch organisations\n        const orgResponse = await api.get('/api/organisations', {\n          params: {\n            tenantId\n          }\n        });\n        setOrganisations(orgResponse.data || []);\n        setError(null);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setError('Failed to fetch data');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [tenantId]);\n  const handleCreateClick = () => {\n    navigate('/organisations/create', {\n      state: {\n        tenantId\n      }\n    });\n  };\n  const handleEditClick = organisationId => {\n    navigate(`/organisations/edit/${organisationId}`, {\n      state: {\n        tenantId\n      }\n    });\n  };\n  const getStatusColor = status => {\n    switch (status === null || status === void 0 ? void 0 : status.toLowerCase()) {\n      case 'active':\n        return 'success';\n      case 'inactive':\n        return 'error';\n      default:\n        return 'default';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n      title: `Organisations - ${tenantName}`,\n      buttonText: \"Create New Organisation\",\n      onButtonClick: handleCreateClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Owner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: organisations.map(org => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: org.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: org.organizationOwner\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Chip, {\n                label: org.status || 'Active',\n                color: getStatusColor(org.status),\n                size: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => handleEditClick(org.id),\n                size: \"small\",\n                children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this)]\n          }, org.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(OrganisationsPage, \"P7E51XhZOEOgcK6/7+fFbP8Pc18=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = OrganisationsPage;\nexport default OrganisationsPage;\nvar _c;\n$RefreshReg$(_c, \"OrganisationsPage\");","map":{"version":3,"names":["React","useState","useEffect","Container","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Chip","IconButton","EditIcon","useNavigate","useLocation","api","PageHeader","styles","jsxDEV","_jsxDEV","OrganisationsPage","_s","_location$state","navigate","location","tenantId","state","organisations","setOrganisations","tenantName","setTenantName","loading","setLoading","error","setError","fetchData","tenantResponse","get","data","name","orgResponse","params","console","handleCreateClick","handleEditClick","organisationId","getStatusColor","status","toLowerCase","className","container","children","title","buttonText","onButtonClick","fileName","_jsxFileName","lineNumber","columnNumber","component","map","org","organizationOwner","label","color","size","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/t_cse/Documents/FunDev/mediumProject/funChain/requirements_tracker_react/frontend/src/pages/OrganisationsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { \r\n  Container, \r\n  Paper, \r\n  Table, \r\n  TableBody, \r\n  TableCell, \r\n  TableContainer, \r\n  TableHead, \r\n  TableRow,\r\n  Chip,\r\n  IconButton\r\n} from '@mui/material';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport api from '../utils/axios';\r\nimport PageHeader from '../components/PageHeader';\r\nimport styles from './styles/OrganisationsPage.module.css';\r\n\r\nconst OrganisationsPage = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const tenantId = location.state?.tenantId || 1;\r\n  \r\n  const [organisations, setOrganisations] = useState([]);\r\n  const [tenantName, setTenantName] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // Fetch tenant details\r\n        const tenantResponse = await api.get(`/api/tenants/${tenantId}`);\r\n        setTenantName(tenantResponse.data.name);\r\n\r\n        // Fetch organisations\r\n        const orgResponse = await api.get('/api/organisations', {\r\n          params: { tenantId }\r\n        });\r\n        setOrganisations(orgResponse.data || []);\r\n        setError(null);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        setError('Failed to fetch data');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [tenantId]);\r\n\r\n  const handleCreateClick = () => {\r\n    navigate('/organisations/create', { state: { tenantId } });\r\n  };\r\n\r\n  const handleEditClick = (organisationId) => {\r\n    navigate(`/organisations/edit/${organisationId}`, { \r\n      state: { tenantId } \r\n    });\r\n  };\r\n\r\n  const getStatusColor = (status) => {\r\n    switch (status?.toLowerCase()) {\r\n      case 'active':\r\n        return 'success';\r\n      case 'inactive':\r\n        return 'error';\r\n      default:\r\n        return 'default';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className={styles.container}>\r\n      <PageHeader \r\n        title={`Organisations - ${tenantName}`}\r\n        buttonText=\"Create New Organisation\"\r\n        onButtonClick={handleCreateClick}\r\n      />\r\n      \r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Name</TableCell>\r\n              <TableCell>Owner</TableCell>\r\n              <TableCell>Status</TableCell>\r\n              <TableCell>Actions</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {organisations.map((org) => (\r\n              <TableRow key={org.id}>\r\n                <TableCell>{org.name}</TableCell>\r\n                <TableCell>{org.organizationOwner}</TableCell>\r\n                <TableCell>\r\n                  <Chip \r\n                    label={org.status || 'Active'} \r\n                    color={getStatusColor(org.status)}\r\n                    size=\"small\"\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IconButton \r\n                    onClick={() => handleEditClick(org.id)}\r\n                    size=\"small\"\r\n                  >\r\n                    <EditIcon />\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default OrganisationsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}