{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\t_cse\\\\Documents\\\\FunDev\\\\mediumProject\\\\funChain\\\\requirements_tracker_react\\\\frontend\\\\src\\\\pages\\\\OrganisationsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Container } from \"@mui/material\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport api from \"../utils/axios\";\nimport Table from \"../components/Table\";\nimport CustomButton from \"../components/Button\";\nimport PageHeader from \"../components/PageHeader\";\nimport SearchField from \"../components/SearchField\";\nimport styles from \"./styles/OrganisationsPage.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrganisationsPage = () => {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const navigate = useNavigate();\n  const tenantId = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.tenantId) || 1;\n  const currentUser = \"abc\";\n  const [organisations, setOrganisations] = useState([]);\n  const [tenantName, setTenantName] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        // Fetch tenant details first\n        const tenantResponse = await api.get(`/api/tenants/${tenantId}`);\n        setTenantName(tenantResponse.data.name);\n\n        // Then fetch organisations\n        const orgResponse = await api.get('/api/organisations', {\n          params: {\n            tenantId\n          }\n        });\n        setOrganisations(orgResponse.data || []);\n        setError(null);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setError('Failed to fetch data');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [tenantId]);\n  const handleSearch = event => {\n    setSearchTerm(event.target.value);\n  };\n\n  // Format date for display\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleString();\n  };\n  const columns = [{\n    field: 'id',\n    headerName: 'ID'\n  }, {\n    field: 'name',\n    headerName: 'Name'\n  }, {\n    field: 'organizationOwner',\n    headerName: 'Owner'\n  }, {\n    field: 'createdAt',\n    headerName: 'Created At',\n    valueGetter: row => formatDate(row.createdAt)\n  }, {\n    field: 'updatedAt',\n    headerName: 'Updated At',\n    valueGetter: row => formatDate(row.updatedAt)\n  }];\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n      title: tenantName ? `Organisations - ${tenantName}` : 'Organisations',\n      buttonText: \"Create New Organisation\",\n      onButtonClick: () => navigate('/organisations/create', {\n        state: {\n          tenantId,\n          currentUser\n        }\n      }),\n      children: /*#__PURE__*/_jsxDEV(SearchField, {\n        value: searchTerm,\n        onChange: handleSearch,\n        placeholder: \"Search organisations...\",\n        className: styles.searchField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), organisations.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.emptyState,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"No organisations found for \", tenantName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n        variant: \"primary\",\n        size: \"medium\",\n        onClick: () => navigate('/organisations/create', {\n          state: {\n            tenantId,\n            currentUser\n          }\n        }),\n        children: \"Create New Organisation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Table, {\n      data: organisations,\n      columns: columns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(OrganisationsPage, \"9wzOJC8cqzvNYJSsx8BxVVF8Sts=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = OrganisationsPage;\nexport default OrganisationsPage;\nvar _c;\n$RefreshReg$(_c, \"OrganisationsPage\");","map":{"version":3,"names":["React","useState","useEffect","Container","useLocation","useNavigate","api","Table","CustomButton","PageHeader","SearchField","styles","jsxDEV","_jsxDEV","OrganisationsPage","_s","_location$state","location","navigate","tenantId","state","currentUser","organisations","setOrganisations","tenantName","setTenantName","error","setError","loading","setLoading","searchTerm","setSearchTerm","fetchData","tenantResponse","get","data","name","orgResponse","params","console","handleSearch","event","target","value","formatDate","dateString","Date","toLocaleString","columns","field","headerName","valueGetter","row","createdAt","updatedAt","children","fileName","_jsxFileName","lineNumber","columnNumber","className","container","title","buttonText","onButtonClick","onChange","placeholder","searchField","length","emptyState","variant","size","onClick","_c","$RefreshReg$"],"sources":["C:/Users/t_cse/Documents/FunDev/mediumProject/funChain/requirements_tracker_react/frontend/src/pages/OrganisationsPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Container } from \"@mui/material\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport api from \"../utils/axios\";\r\nimport Table from \"../components/Table\";\r\nimport CustomButton from \"../components/Button\";\r\nimport PageHeader from \"../components/PageHeader\";\r\nimport SearchField from \"../components/SearchField\";\r\nimport styles from \"./styles/OrganisationsPage.module.css\";\r\n\r\nconst OrganisationsPage = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const tenantId = location.state?.tenantId || 1;\r\n  const currentUser = \"abc\";\r\n  const [organisations, setOrganisations] = useState([]);\r\n  const [tenantName, setTenantName] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        // Fetch tenant details first\r\n        const tenantResponse = await api.get(`/api/tenants/${tenantId}`);\r\n        setTenantName(tenantResponse.data.name);\r\n\r\n        // Then fetch organisations\r\n        const orgResponse = await api.get('/api/organisations', {\r\n          params: { tenantId }\r\n        });\r\n        setOrganisations(orgResponse.data || []);\r\n        setError(null);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        setError('Failed to fetch data');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [tenantId]);\r\n\r\n  const handleSearch = (event) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  // Format date for display\r\n  const formatDate = (dateString) => {\r\n    return new Date(dateString).toLocaleString();\r\n  };\r\n\r\n  const columns = [\r\n    { field: 'id', headerName: 'ID' },\r\n    { field: 'name', headerName: 'Name' },\r\n    { field: 'organizationOwner', headerName: 'Owner' },\r\n    { \r\n      field: 'createdAt', \r\n      headerName: 'Created At',\r\n      valueGetter: (row) => formatDate(row.createdAt)\r\n    },\r\n    { \r\n      field: 'updatedAt', \r\n      headerName: 'Updated At',\r\n      valueGetter: (row) => formatDate(row.updatedAt)\r\n    }\r\n  ];\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>Error: {error}</div>;\r\n\r\n  return (\r\n    <Container className={styles.container}>\r\n      <PageHeader \r\n        title={tenantName ? `Organisations - ${tenantName}` : 'Organisations'}\r\n        buttonText=\"Create New Organisation\"\r\n        onButtonClick={() => navigate('/organisations/create', { \r\n          state: { \r\n            tenantId,\r\n            currentUser \r\n          } \r\n        })}\r\n      >\r\n        <SearchField\r\n          value={searchTerm}\r\n          onChange={handleSearch}\r\n          placeholder=\"Search organisations...\"\r\n          className={styles.searchField}\r\n        />\r\n      </PageHeader>\r\n      \r\n      {organisations.length === 0 ? (\r\n        <div className={styles.emptyState}>\r\n          <p>No organisations found for {tenantName}</p>\r\n          <CustomButton \r\n            variant=\"primary\"\r\n            size=\"medium\"\r\n            onClick={() => navigate('/organisations/create', { \r\n              state: { \r\n                tenantId,\r\n                currentUser \r\n              } \r\n            })}\r\n          >\r\n            Create New Organisation\r\n          </CustomButton>\r\n        </div>\r\n      ) : (\r\n        <Table \r\n          data={organisations} \r\n          columns={columns} \r\n        />\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default OrganisationsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}