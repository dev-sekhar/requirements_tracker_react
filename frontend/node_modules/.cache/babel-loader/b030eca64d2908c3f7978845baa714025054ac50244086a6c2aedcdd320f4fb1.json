{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\t_cse\\\\Documents\\\\FunDev\\\\mediumProject\\\\funChain\\\\requirements_tracker_react\\\\frontend\\\\src\\\\index.js\";\nconst startTime = performance.now();\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 3\n}, this));\n\n// Calculate and log startup time\nwindow.addEventListener(\"load\", () => {\n  const endTime = performance.now();\n  const startupTime = (endTime - startTime).toFixed(2);\n  console.log(`UI startup time: ${startupTime}ms`);\n});\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\nreportWebVitals(console.log);","map":{"version":3,"names":["startTime","performance","now","React","ReactDOM","App","reportWebVitals","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber","window","addEventListener","endTime","startupTime","toFixed","console","log"],"sources":["C:/Users/t_cse/Documents/FunDev/mediumProject/funChain/requirements_tracker_react/frontend/src/index.js"],"sourcesContent":["const startTime = performance.now();\r\n\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// Calculate and log startup time\r\nwindow.addEventListener(\"load\", () => {\r\n  const endTime = performance.now();\r\n  const startupTime = (endTime - startTime).toFixed(2);\r\n  console.log(`UI startup time: ${startupTime}ms`);\r\n});\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\nreportWebVitals(console.log);\r\n"],"mappings":";AAAA,MAAMA,SAAS,GAAGC,WAAW,CAACC,GAAG,CAAC,CAAC;AAEnC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,IAAI,GAAGL,QAAQ,CAACM,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,cACTL,OAAA,CAACL,KAAK,CAACW,UAAU;EAAAC,QAAA,eACfP,OAAA,CAACH,GAAG;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACS,CACpB,CAAC;;AAED;AACAC,MAAM,CAACC,gBAAgB,CAAC,MAAM,EAAE,MAAM;EACpC,MAAMC,OAAO,GAAGrB,WAAW,CAACC,GAAG,CAAC,CAAC;EACjC,MAAMqB,WAAW,GAAG,CAACD,OAAO,GAAGtB,SAAS,EAAEwB,OAAO,CAAC,CAAC,CAAC;EACpDC,OAAO,CAACC,GAAG,CAAC,oBAAoBH,WAAW,IAAI,CAAC;AAClD,CAAC,CAAC;;AAEF;AACA;AACAjB,eAAe,CAACmB,OAAO,CAACC,GAAG,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}